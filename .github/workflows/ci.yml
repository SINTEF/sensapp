name: SensApp CI with cargo-make

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  # PostgreSQL test settings
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: sensapp
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/sensapp
  TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/sensapp

jobs:
  ci:
    name: Full CI Pipeline
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: sensapp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal --component clippy --no-self-update
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
      - name: Install cargo-make
        run: cargo install cargo-make
      - name: Install sqlx-cli for PostgreSQL
        run: cargo install sqlx-cli --no-default-features --features postgres
      - name: Run PostgreSQL migrations
        run: cargo sqlx migrate run --source src/storage/postgresql/migrations --database-url $DATABASE_URL
      - name: Run full CI pipeline
        run: cargo make ci

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: sensapp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal --component clippy llvm-tools-preview --no-self-update
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
      - name: Install cargo-make
        run: cargo install cargo-make
      - name: Install sqlx-cli for PostgreSQL
        run: cargo install sqlx-cli --no-default-features --features postgres
      - name: Run PostgreSQL migrations
        run: cargo sqlx migrate run --source src/storage/postgresql/migrations --database-url $DATABASE_URL
      - name: Generate test coverage
        run: cargo llvm-cov --features postgres,sqlite --no-default-features --verbose --lcov --output-path lcov.info
      - name: Upload coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: lcov.info
          min_coverage: 50
